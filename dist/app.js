(()=>{"use strict";const e=async e=>`https://flagcdn.com/w20/${e}.png`,t=document.querySelector("#location-name"),n=document.querySelector("#submit"),a=document.querySelector(".main"),o=document.querySelector("#description"),r=document.querySelector("#location-address"),i=document.querySelector("#humidity"),c=document.querySelector("#temp"),s=document.querySelector("#feels-like"),u=document.querySelector("#wind"),d=document.querySelector("#min-max");t.value="nepal",(()=>{const m=async()=>{if(""===t.value)return alert("enter the name of city"),!1;const n=await async function(e){const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=metric&appid=d02ff9591aed8d0a11368b857174ac68`,{mode:"cors"}),n=await t.json();return 200!==n.cod?(alert("No such City or Country!"),!1):n}(t.value),m=n.weather[0].description.split(" "),l=[];for(let e=0;e<m.length;e+=1)l[e]=m[e][0].toUpperCase()+m[e].substr(1).toLowerCase();const y=new Image,p=await e(n.sys.country.toLowerCase());console.log(p),y.classList.add("flag"),y.src=p;const C=await(async e=>{const t=await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=eBhEdHXogjan6ex7lTVAjDCUmubhMM6C&s=${e}`,{mode:"cors"});return(await t.json()).data.images.original.url})(l.join(" "));return a.style.backgroundImage=`url(${C})`,o.textContent=l.join(" "),r.textContent=`${n.name}, ${n.sys.country}`,r.appendChild(y),i.textContent=`Humidity: ${n.main.humidity}`,c.textContent=`${Math.round(n.main.temp)}째C`,s.textContent=`Feels Like: ${n.main.feels_like}째C`,u.textContent=`Wind Speed: ${n.wind.speed} Km/hr`,d.textContent=`Temperature(Min/Max): ${n.main.temp_min}째C/${n.main.temp_max}째C`,t.value="",0};n.addEventListener("click",(()=>{m()})),t.addEventListener("keydown",(e=>{13===e.keyCode&&m()})),m()})(),e()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,