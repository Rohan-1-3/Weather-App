(()=>{"use strict";const e=document.querySelector("#location-name"),t=document.querySelector("#submit"),n=document.querySelector("#description"),o=document.querySelector("#location-address"),r=document.querySelector("#humidity"),a=document.querySelector("#temp"),i=document.querySelector("#feels-like"),c=document.querySelector("#wind"),u=document.querySelector("#min-max");e.value="nepal",(()=>{const d=async()=>{if(""===e.value)return alert("enter the name of city"),!1;const t=await async function(e){const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=metric&appid=d02ff9591aed8d0a11368b857174ac68`,{mod:"cors"}),n=await t.json();return 200!==n.cod?(alert("No such City or Country!"),!1):n}(e.value),d=t.weather[0].description.split(" "),m=[];for(let e=0;e<d.length;e+=1)m[e]=d[e][0].toUpperCase()+d[e].substr(1).toLowerCase();return n.textContent=m.join(" "),o.textContent=`${t.name}, ${t.sys.country}`,r.textContent=`Humidity: ${t.main.humidity}`,a.textContent=`${Math.round(t.main.temp)}째C`,i.textContent=`Feels Like: ${t.main.feels_like}째C`,c.textContent=`Wind Speed: ${t.wind.speed} Km/hr`,u.textContent=`Temperature(Min/Max): ${t.main.temp_min}째C/${t.main.temp_max}째C`,e.value="",0};t.addEventListener("click",(()=>{d()})),e.addEventListener("keydown",(e=>{13===e.keyCode&&d()})),d()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwibWFwcGluZ3MiOiJtQkFHQSxNQUFNLEVBQVdBLFNBQVNDLGNBQWMsa0JBQ2xDQyxFQUFlRixTQUFTQyxjQUFjLFdBRXRDRSxFQUFjSCxTQUFTQyxjQUFjLGdCQUNyQ0csRUFBWUosU0FBU0MsY0FBYyxxQkFDbkNJLEVBQVdMLFNBQVNDLGNBQWMsYUFDbENLLEVBQU9OLFNBQVNDLGNBQWMsU0FDOUJNLEVBQVlQLFNBQVNDLGNBQWMsZUFDbkNPLEVBQVlSLFNBQVNDLGNBQWMsU0FDbkNRLEVBQVNULFNBQVNDLGNBQWMsWUFDdEMsRUFBU1MsTUFBUSxRQUNPLE1BQ3BCLE1BQU1DLEVBQWNDLFVBQ2hCLEdBQXNCLEtBQW5CLEVBQVNGLE1BRVIsT0FEQUcsTUFBTSwyQkFDQyxFQUdYLE1BQU1DLFFDcEJDRixlQUE4QkcsR0FFekMsTUFBTUMsUUFBaUJDLE1BQU0scURBQXFERix3REFDbEYsQ0FBQ0csSUFBTSxTQUVEQyxRQUFxQkgsRUFBU0ksT0FDcEMsT0FBd0IsTUFBckJELEVBQWFFLEtBQ1pSLE1BQU0sNkJBQ0MsR0FFSk0sQ0FDWCxDRFNrQ0csQ0FBZSxFQUFTWixPQUU1Q2EsRUFBcUJULEVBQVlVLFFBQVEsR0FBR3JCLFlBQVlzQixNQUFNLEtBQzlEQyxFQUFhLEdBQ25CLElBQUksSUFBSUMsRUFBRyxFQUFHQSxFQUFFSixFQUFtQkssT0FBT0QsR0FBRyxFQUN6Q0QsRUFBV0MsR0FBS0osRUFBbUJJLEdBQUcsR0FBR0UsY0FBZ0JOLEVBQW1CSSxHQUFHRyxPQUFPLEdBQUdDLGNBWTdGLE9BVEE1QixFQUFZNkIsWUFBY04sRUFBV08sS0FBSyxLQUMxQzdCLEVBQVU0QixZQUFjLEdBQUdsQixFQUFZb0IsU0FBU3BCLEVBQVlxQixJQUFJQyxVQUNoRS9CLEVBQVMyQixZQUFjLGFBQWFsQixFQUFZdUIsS0FBS2hDLFdBQ3JEQyxFQUFLMEIsWUFBYyxHQUFHTSxLQUFLQyxNQUFNekIsRUFBWXVCLEtBQUsvQixVQUNsREMsRUFBVXlCLFlBQWMsZUFBZWxCLEVBQVl1QixLQUFLRyxlQUN4RGhDLEVBQVV3QixZQUFjLGVBQWVsQixFQUFZMkIsS0FBS0MsY0FDeERqQyxFQUFPdUIsWUFBYyx5QkFBeUJsQixFQUFZdUIsS0FBS00sY0FBYzdCLEVBQVl1QixLQUFLTyxhQUU5RixFQUFTbEMsTUFBUSxHQUNWLENBQUMsRUFHWlIsRUFBYTJDLGlCQUFpQixTQUFTLEtBQ25DbEMsR0FBYSxJQUdqQixFQUFTa0MsaUJBQWlCLFdBQVlDLElBQ2pCLEtBQWRBLEVBQUVDLFNBQ0RwQyxHQUNKLElBR0pBLEdBQWEsRUVqRGpCLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL21vZHVsZXMvZ2V0TG9jYXRpb24uanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1mb3JlY2FzdC8uL3NyYy9tb2R1bGVzL2ZldGNoRGF0YS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWZvcmVjYXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWFsZXJ0ICovXHJcbmltcG9ydCBnZXRXZWF0aGVySW5mbyBmcm9tIFwiLi9mZXRjaERhdGFcIjtcclxuXHJcbmNvbnN0IGxvY2F0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNsb2NhdGlvbi1uYW1lXCIpO1xyXG5jb25zdCBzdWJtaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N1Ym1pdFwiKTtcclxuXHJcbmNvbnN0IGRlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZXNjcmlwdGlvblwiKTtcclxuY29uc3QgcGxhY2VOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNsb2NhdGlvbi1hZGRyZXNzXCIpO1xyXG5jb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaHVtaWRpdHlcIik7XHJcbmNvbnN0IHRlbXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RlbXBcIik7XHJcbmNvbnN0IGZlZWxzTGlrZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmVlbHMtbGlrZVwiKTtcclxuY29uc3Qgd2luZFNwZWVkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN3aW5kXCIpO1xyXG5jb25zdCBtaW5NYXggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21pbi1tYXhcIik7XHJcbmxvY2F0aW9uLnZhbHVlID0gXCJuZXBhbFwiOy8vIGluaXRpYWwgdmFsdWUgZm9yIHdlYXRoZXIgZGlzcGxheVxyXG5jb25zdCB3ZWF0aGVyRnVuY3Rpb24gPSAoKT0+e1xyXG4gICAgY29uc3Qgd2VhdGhlckluZm8gPSBhc3luYyAoKT0+e1xyXG4gICAgICAgIGlmKGxvY2F0aW9uLnZhbHVlID09PSBcIlwiKXsvLyBjb25kaXRpb24gZm9yIGJsYW5rIGlucHV0XHJcbiAgICAgICAgICAgIGFsZXJ0KFwiZW50ZXIgdGhlIG5hbWUgb2YgY2l0eVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBmZXRjaGluZyBkYXRhIGZyb20gZmV0Y2hEYXRhLmpzXHJcbiAgICAgICAgY29uc3Qgd2VhdGhlckRhdGEgPSBhd2FpdCBnZXRXZWF0aGVySW5mbyhsb2NhdGlvbi52YWx1ZSk7XHJcbiAgICAgICAgLy8gY2FwaXRhbGl6ZSAxc3Qgd29yZFxyXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uQ2FwaXRhbCA9IHdlYXRoZXJEYXRhLndlYXRoZXJbMF0uZGVzY3JpcHRpb24uc3BsaXQoXCIgXCIpO1xyXG4gICAgICAgIGNvbnN0IGZpbmFsQXJyYXkgPSBbXTtcclxuICAgICAgICBmb3IobGV0IGkgPTA7IGk8ZGVzY3JpcHRpb25DYXBpdGFsLmxlbmd0aDtpKz0xKXtcclxuICAgICAgICAgICAgZmluYWxBcnJheVtpXSA9IGRlc2NyaXB0aW9uQ2FwaXRhbFtpXVswXS50b1VwcGVyQ2FzZSgpICsgZGVzY3JpcHRpb25DYXBpdGFsW2ldLnN1YnN0cigxKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpbnNlcnRpbmcgdmFsdWUgaW4gdGhlIEhUTUwgZmlsZVxyXG4gICAgICAgIGRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZmluYWxBcnJheS5qb2luKFwiIFwiKTtcclxuICAgICAgICBwbGFjZU5hbWUudGV4dENvbnRlbnQgPSBgJHt3ZWF0aGVyRGF0YS5uYW1lfSwgJHt3ZWF0aGVyRGF0YS5zeXMuY291bnRyeX1gO1xyXG4gICAgICAgIGh1bWlkaXR5LnRleHRDb250ZW50ID0gYEh1bWlkaXR5OiAke3dlYXRoZXJEYXRhLm1haW4uaHVtaWRpdHl9YDtcclxuICAgICAgICB0ZW1wLnRleHRDb250ZW50ID0gYCR7TWF0aC5yb3VuZCh3ZWF0aGVyRGF0YS5tYWluLnRlbXApfcKwQ2A7XHJcbiAgICAgICAgZmVlbHNMaWtlLnRleHRDb250ZW50ID0gYEZlZWxzIExpa2U6ICR7d2VhdGhlckRhdGEubWFpbi5mZWVsc19saWtlfcKwQ2A7XHJcbiAgICAgICAgd2luZFNwZWVkLnRleHRDb250ZW50ID0gYFdpbmQgU3BlZWQ6ICR7d2VhdGhlckRhdGEud2luZC5zcGVlZH0gS20vaHJgO1xyXG4gICAgICAgIG1pbk1heC50ZXh0Q29udGVudCA9IGBUZW1wZXJhdHVyZShNaW4vTWF4KTogJHt3ZWF0aGVyRGF0YS5tYWluLnRlbXBfbWlufcKwQy8ke3dlYXRoZXJEYXRhLm1haW4udGVtcF9tYXh9wrBDYFxyXG4gICAgICAgIC8vIHJlc2V0dGluZyBpbnB1dCB2YWx1ZVxyXG4gICAgICAgIGxvY2F0aW9uLnZhbHVlID0gXCJcIjtcclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKT0+e1xyXG4gICAgICAgIHdlYXRoZXJJbmZvKCk7XHJcbiAgICB9KTtcclxuICAgIC8vIGVudGVyIGtleSBpbml0aWF0ZXMgdGhlIGZ1bmN0aW9uXHJcbiAgICBsb2NhdGlvbi5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSk9PntcclxuICAgICAgICBpZihlLmtleUNvZGUgPT09IDEzKXtcclxuICAgICAgICAgICAgd2VhdGhlckluZm8oKTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIHdlYXRoZXJJbmZvKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdlYXRoZXJGdW5jdGlvbjsiLCIvKiBlc2xpbnQtZGlzYWJsZSBuby1hbGVydCAqL1xyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBnZXRXZWF0aGVySW5mbyhsb2NhdGlvbil7XHJcbiAgICAvLyBmZXRjaGluZyBsb2NhdGlvbnMgd2VhdGhlciBpbmZvXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPSR7bG9jYXRpb259JnVuaXRzPW1ldHJpYyZhcHBpZD1kMDJmZjk1OTFhZWQ4ZDBhMTEzNjhiODU3MTc0YWM2OGAsXHJcbiAgICB7bW9kIDogXCJjb3JzXCJ9XHJcbiAgICApXHJcbiAgICBjb25zdCBsb2NhdGlvbkRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICBpZihsb2NhdGlvbkRhdGEuY29kICE9PSAyMDApey8vIGNvbmRpdGlvbiBmb3IgdW5hdmFpbGFibGUgY2l0eVxyXG4gICAgICAgIGFsZXJ0KFwiTm8gc3VjaCBDaXR5IG9yIENvdW50cnkhXCIpO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiBsb2NhdGlvbkRhdGE7XHJcbn1cclxuIiwiaW1wb3J0IHdlYXRoZXJGdW5jdGlvbiBmcm9tIFwiLi9tb2R1bGVzL2dldExvY2F0aW9uXCI7XHJcblxyXG53ZWF0aGVyRnVuY3Rpb24oKTsiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic3VibWl0QnV0dG9uIiwiZGVzY3JpcHRpb24iLCJwbGFjZU5hbWUiLCJodW1pZGl0eSIsInRlbXAiLCJmZWVsc0xpa2UiLCJ3aW5kU3BlZWQiLCJtaW5NYXgiLCJ2YWx1ZSIsIndlYXRoZXJJbmZvIiwiYXN5bmMiLCJhbGVydCIsIndlYXRoZXJEYXRhIiwibG9jYXRpb24iLCJyZXNwb25zZSIsImZldGNoIiwibW9kIiwibG9jYXRpb25EYXRhIiwianNvbiIsImNvZCIsImdldFdlYXRoZXJJbmZvIiwiZGVzY3JpcHRpb25DYXBpdGFsIiwid2VhdGhlciIsInNwbGl0IiwiZmluYWxBcnJheSIsImkiLCJsZW5ndGgiLCJ0b1VwcGVyQ2FzZSIsInN1YnN0ciIsInRvTG93ZXJDYXNlIiwidGV4dENvbnRlbnQiLCJqb2luIiwibmFtZSIsInN5cyIsImNvdW50cnkiLCJtYWluIiwiTWF0aCIsInJvdW5kIiwiZmVlbHNfbGlrZSIsIndpbmQiLCJzcGVlZCIsInRlbXBfbWluIiwidGVtcF9tYXgiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImtleUNvZGUiXSwic291cmNlUm9vdCI6IiJ9